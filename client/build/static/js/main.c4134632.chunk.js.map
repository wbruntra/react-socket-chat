{"version":3,"sources":["components/Main.js","actions/index.js","components/App.js","reducers/socket.js","reducers/index.js","reducers/statusReducer.js","reducers/healthReducer.js","store.js","index.js"],"names":["Main","state","handle","msg","sendForm","e","preventDefault","_this$state","_this","props","sendMessage","setState","this","checkHealth","_this2","messages","_this$state2","react_default","a","createElement","className","onSubmit","type","value","onChange","target","map","data","i","key","Component","connect","status","health","socket","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","serverResponse","wrap","_context","prev","next","axios","get","sent","payload","stop","_x","apply","arguments","App","react_router_dom","react_router","path","component","initialState","reducers","length","undefined","action","update","$push","socketUrl","process","REACT_APP_SOCKET_URL","io","socketIoMiddleware","createSocketIoMiddleware","store","createStore","combineReducers","objectSpread","composeWithDevTools","applyMiddleware","reduxThunk","subscribe","console","log","getState","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4134632.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { checkHealth, sendMessage } from '../actions';\n\nclass Main extends Component {\n  state = {\n    handle: '',\n    msg: '',\n  };\n\n  componentDidMount() {\n    this.props.checkHealth();\n  }\n\n  sendForm = e => {\n    e.preventDefault();\n    const { handle, msg } = this.state;\n\n    this.props.sendMessage(handle, msg);\n    this.setState({\n      msg: '',\n    });\n  };\n\n  render() {\n    const { messages } = this.props;\n    const { handle, msg } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form onSubmit={this.sendForm}>\n            <input\n              type=\"text\"\n              value={handle}\n              onChange={e => {\n                this.setState({ handle: e.target.value });\n              }}\n            />\n            <input\n              type=\"text\"\n              value={msg}\n              onChange={e => {\n                this.setState({\n                  msg: e.target.value,\n                });\n              }}\n            />\n            <input className=\"btn\" type=\"submit\" />\n          </form>\n        </div>\n        <div className=\"row\">\n          <ul className=\"collection\">\n            {messages.map((data, i) => {\n              return (\n                <li className=\"collection-item\" key={i}>\n                  {data.handle} -- {data.msg}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.status,\n    health: state.health,\n    messages: state.socket.messages,\n  };\n};\n\nexport default connect(mapStateToProps, { checkHealth, sendMessage })(Main);\n","import axios from 'axios';\n\nexport const HEALTH_CHECK = 'HEALTH_CHECK';\nexport const SERVER_HELLO = 'server/hello';\n\nexport const checkHealth = () => async dispatch => {\n  const serverResponse = await axios.get('/api');\n  dispatch({\n    type: HEALTH_CHECK,\n    payload: serverResponse.data,\n  });\n};\n\nexport const sendMessage = (handle, msg) => {\n  return {\n    type: SERVER_HELLO,\n    data: { handle, msg },\n  };\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" component={Main} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import update from 'immutability-helper';\n\nconst initialState = {\n  messages: [{handle: 'Bill', msg:'Hello world!'}],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'message':\n      return update(state, {\n        messages: { $push: [action.data] },\n      });\n    default:\n      return state;\n  }\n};\n","import status from './statusReducer';\nimport health from './healthReducer';\nimport socket from './socket';\n\nconst reducers = {\n  status,\n  health,\n  socket,\n};\n\nexport default reducers;\n","export default (state='OK', action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","import { HEALTH_CHECK } from '../actions';\n\nexport default (state={}, action) => {\n  switch (action.type) {\n    case HEALTH_CHECK:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport io from 'socket.io-client';\nimport reducers from './reducers';\n\nconst socketUrl = process.env.REACT_APP_SOCKET_URL\n\nlet socket = io(socketUrl);\nlet socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\n\nconst store = createStore(\n  combineReducers({ ...reducers }),\n  composeWithDevTools(applyMiddleware(socketIoMiddleware, reduxThunk)),\n);\n\nstore.subscribe(()=>{\n  console.log('new client state', store.getState());\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles/index.scss';\nimport App from './components/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}